name: Post-Merge Automation Tests with Allure

on:
  workflow_run:
    workflows: ["Deploy Mezon FE Dev"]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: automation-tests-allure-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  automation-tests-with-allure:
    runs-on: mezon-e2e
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout mezon-automation repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/mezon-automation
          path: mezon-automation
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Install mezon-automation dependencies
        working-directory: ./mezon-automation
        run: yarn

      - name: Install Playwright browsers
        working-directory: ./mezon-automation
        run: npx playwright install

      - name: Create environment file
        working-directory: ./mezon-automation
        run: |
          cat > .env << EOF
          BASE_URL=https://dev-mezon.nccsoft.vn
          WORKERS=1
          EOF

      - name: Verify dev environment is accessible
        run: |
          echo "🌐 Testing connection to dev-mezon.nccsoft.vn..."
          curl -s --head https://dev-mezon.nccsoft.vn > /dev/null || {
            echo "❌ Cannot reach https://dev-mezon.nccsoft.vn"
            exit 1
          }
          echo "✅ Dev environment is accessible!"

      - name: Prepare Allure history
        working-directory: ./mezon-automation
        run: |
          # Copy previous allure-results from global allure directory to preserve history
          if [ -d "/home/dungxbuif/allure/allure-results" ]; then
            echo "📂 Copying previous allure-results for history preservation..."
            cp -r /home/dungxbuif/allure/allure-results ./ || true
          fi
          
          # Copy previous history from global allure-report to allure-results (as per Allure docs)
          if [ -d "/home/dungxbuif/allure/allure-report/history" ]; then
            echo "📜 Preserving test history..."
            mkdir -p allure-results
            cp -r /home/dungxbuif/allure/allure-report/history allure-results/ || true
          fi

      - name: Run automation tests with Allure
        working-directory: ./mezon-automation
        run: npm run test:e2e
        continue-on-error: true

      - name: Generate Allure report
        if: always()
        working-directory: ./mezon-automation
        run: |
          echo "📊 Generating Allure report..."
          npm run allure:generate || {
            echo "⚠️ Allure generation failed, trying with clean generation..."
            npx allure generate allure-results --clean -o allure-report --single-file
          }

      - name: Update global Allure directory
        if: always()
        working-directory: ./mezon-automation
        run: |
          echo "🔄 Updating global Allure directory..."
          
          # Backup current global allure if it exists
          if [ -d "/home/dungxbuif/allure/allure-report" ]; then
            echo "💾 Backing up current allure report..."
            sudo cp -r /home/dungxbuif/allure/allure-report /home/dungxbuif/allure/allure-report.backup.$(date +%Y%m%d_%H%M%S) || true
          fi
          
          # Replace global allure-results and allure-report with new ones
          if [ -d "allure-results" ]; then
            echo "📁 Updating allure-results..."
            sudo rm -rf /home/dungxbuif/allure/allure-results || true
            sudo cp -r allure-results /home/dungxbuif/allure/
            sudo chown -R www-data:www-data /home/dungxbuif/allure/allure-results || true
          fi
          
          if [ -d "allure-report" ]; then
            echo "📊 Updating allure-report..."
            sudo rm -rf /home/dungxbuif/allure/allure-report || true
            sudo cp -r allure-report /home/dungxbuif/allure/
            sudo chown -R www-data:www-data /home/dungxbuif/allure/allure-report || true
            
            # Fix permissions for nginx
            sudo chmod -R 755 /home/dungxbuif/allure/allure-report || true
          fi
          
          echo "✅ Global Allure directory updated successfully!"

      - name: Restart nginx to ensure proper serving
        if: always()
        run: |
          sudo systemctl reload nginx || sudo systemctl restart nginx
          echo "🔄 Nginx reloaded to serve new Allure report"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.sha }}
          path: |
            mezon-automation/playwright-report/
          retention-days: 7

      - name: Post results summary
        if: always()
        run: |
          echo "## 📊 Automation Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Test Environment:** https://dev-mezon.nccsoft.vn" >> $GITHUB_STEP_SUMMARY
          echo "📈 **Allure Report:** http://10.10.60.139/" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Workers:** 4" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "mezon-automation/allure-report" ]; then
            echo "✅ **Status:** Allure report generated and deployed successfully" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Live Report:** [View Allure Report](http://10.10.60.139/)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status:** Allure report generation failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🕐 **Completed:** $(date)" >> $GITHUB_STEP_SUMMARY

      - name: Cleanup old backups (keep last 5)
        if: always()
        run: |
          echo "🧹 Cleaning up old Allure report backups..."
          cd /home/dungxbuif/allure/
          sudo find . -name "allure-report.backup.*" -type d | head -n -5 | sudo xargs rm -rf || true
          echo "✅ Cleanup completed"
