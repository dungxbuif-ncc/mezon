name: PR Automation Tests

on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  automation-tests:
    runs-on: mezon-e2e
    
    steps:
      - name: Checkout mezon repository
        uses: actions/checkout@v4
        with:
          path: mezon
          
      - name: Checkout mezon-automation repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/mezon-automation
          path: mezon-automation
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Generate unique port
        id: port
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PORT=$((4200 + RANDOM % 100))
          else
            PORT=$((4200 + ${{ github.event.number }} % 100))
          fi
          echo "MEZON_PORT=$PORT" >> $GITHUB_ENV
          echo "port=$PORT" >> $GITHUB_OUTPUT
          echo "Using port: $PORT"

      - name: Install mezon dependencies
        working-directory: ./mezon
        run: |
          echo "Environments"
          echo "NODE_ENV: ${{ env.NODE_ENV }}"
          export nv=$(node -v)
          echo "Node version: $nv"
          echo "Installing dependencies"
          yarn config set nodedir ~/.cache/node-gyp/"${nv:1}"
          echo "Node directory: ${nv:1}"
          yarn

      - name: Start mezon dev server
        working-directory: ./mezon
        run: |
          echo "🚀 Starting mezon dev server on port ${{ env.MEZON_PORT }}..."
          echo "📋 Current directory: $(pwd)"
          echo "📁 Directory contents:"
          ls -la
          echo "🔍 Checking if nx command exists:"
          which nx || echo "nx not found in PATH"
          echo "📦 Node and npm versions:"
          node --version
          npm --version
          yarn --version
          echo "🌐 Checking if port ${{ env.MEZON_PORT }} is available:"
          netstat -tuln | grep ":${{ env.MEZON_PORT }}" || echo "Port ${{ env.MEZON_PORT }} is available"
          
          echo "🏃 Starting server..."
          nohup nx run chat:serve --host=127.0.0.1 --port=${{ env.MEZON_PORT }} > mezon-dev.log 2>&1 &
          SERVER_PID=$!
          echo $SERVER_PID > mezon-dev.pid
          echo "📋 Server PID: $SERVER_PID"
          
          echo "⏱️ Waiting 10 seconds for initial startup..."
          sleep 10
          
          echo "📜 Initial server log output:"
          head -50 mezon-dev.log || echo "No log file yet"
          
          echo "🔍 Checking if process is still running:"
          if ps -p $SERVER_PID > /dev/null; then
            echo "✅ Server process is running (PID: $SERVER_PID)"
          else
            echo "❌ Server process died! Full log:"
            cat mezon-dev.log || echo "No log file found"
            exit 1
          fi
          
      - name: Wait for mezon server to be ready
        run: |
          echo "⏳ Waiting for mezon server to be ready on port ${{ env.MEZON_PORT }}..."
          
          # Check if PID file exists
          if [ ! -f ./mezon/mezon-dev.pid ]; then
            echo "❌ PID file not found!"
            exit 1
          fi
          
          SERVER_PID=$(cat ./mezon/mezon-dev.pid)
          echo "📋 Server PID from file: $SERVER_PID"
          
          # Check if process is running
          if ! ps -p $SERVER_PID > /dev/null; then
            echo "❌ Server process is not running! Checking logs..."
            echo "📜 Full server log:"
            cat ./mezon/mezon-dev.log || echo "No log file found"
            exit 1
          fi

      - name: Install mezon-automation dependencies
        working-directory: ./mezon-automation
        run: yarn

      - name: Install Playwright browsers
        working-directory: ./mezon-automation
        run: npx playwright install 

      - name: Create environment file
        working-directory: ./mezon-automation
        run: |
          cat > .env << EOF
          BASE_URL=http://127.0.0.1:${{ env.MEZON_PORT }}/
          NODE_ENV=development
          API_URL=http://127.0.0.1:${{ env.MEZON_PORT }}/api
          SKIP_LOGIN=true
          WORKERS=6
          EOF

      - name: Run automation tests
        working-directory: ./mezon-automation
        run: |
          echo "🧪 Starting automation tests..."
          echo "📊 Environment file content:"
          cat .env
          echo ""
          echo "🚀 Running tests with npm run test..."
          xvfb-run npm run test
          echo "✅ Tests completed"
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-pr-${{ github.event.number }}
          path: |
            mezon-automation/test-results/
            mezon-automation/playwright-report/
          retention-days: 7

      - name: Generate test summary
        if: always()
        working-directory: ./mezon-automation
        run: |
          echo "## 🧪 PR Automation Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Test Environment:** http://127.0.0.1:${{ env.MEZON_PORT }}/" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Workers:** 6" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check if test results exist
          if [ -d "test-results" ]; then
            FAILED_TESTS=$(find test-results -name "*.json" -exec grep -l '"status":"failed"' {} \; 2>/dev/null | wc -l)
            PASSED_TESTS=$(find test-results -name "*.json" -exec grep -l '"status":"passed"' {} \; 2>/dev/null | wc -l)
            TOTAL_TESTS=$((FAILED_TESTS + PASSED_TESTS))
            
            if [ $FAILED_TESTS -eq 0 ]; then
              echo "✅ **Status:** All tests passed ($TOTAL_TESTS tests)" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Status:** $FAILED_TESTS test(s) failed out of $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⚠️ **Status:** No test results found" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "playwright-report" ]; then
            echo "📊 **Playwright Report:** Available in artifacts" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🕐 **Completed:** $(date)" >> $GITHUB_STEP_SUMMARY

      - name: Stop mezon dev server
        if: always()
        working-directory: ./mezon
        run: |
          if [ -f mezon-dev.pid ]; then
            kill $(cat mezon-dev.pid) || true
            rm mezon-dev.pid
          fi
